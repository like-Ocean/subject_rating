"""Allow NULL for lector/practic

Revision ID: 5c59a94451f9
Revises: 09957e1ea028
Create Date: 2025-06-18 12:21:20.493224

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c59a94451f9'
down_revision: Union[str, None] = '09957e1ea028'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('reviews', 'lector_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('reviews', 'practic_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint('reviews_practic_id_fkey', 'reviews', type_='foreignkey')
    op.drop_constraint('reviews_lector_id_fkey', 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'teachers', ['practic_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'reviews', 'teachers', ['lector_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key('reviews_lector_id_fkey', 'reviews', 'teachers', ['lector_id'], ['id'])
    op.create_foreign_key('reviews_practic_id_fkey', 'reviews', 'teachers', ['practic_id'], ['id'])
    op.alter_column('reviews', 'practic_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('reviews', 'lector_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###
